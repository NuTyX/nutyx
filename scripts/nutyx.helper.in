#!/bin/bash

test_change_version() {
  [[ $# -ne 2 ]] && return
  grep -w ^version="$1" */*/Pkgfile
}

change_version() {
  [[ $# -ne 2 ]] && return
  export old=$1
  export new=$2
  for i in $(grep -w ^version="$old" */*/Pkgfile | cut -d':' -f1); do
    sed -i "s/version=$old/version=$new/" "$i"
    newpackager="$(git config user.name) <$(git config user.email)>"
    source "$i"
    if [ "$packager" != "$newpackager" ]; then
      oldpackager="${packager%[ ,<]*}" \
      newcontributors="$contributors, ${oldpackager// /}"
    fi
    if [ "$packager" != "$newpackager" ]; then
      sed -e 's/^\(packager=\).*/\1/g' \
          -e "s/packager=/packager=\"$newpackager\"/" \
          -i "$i"                                                                                                                                        [11:40 x86_64 5.11.15-NuTyX cat@nutyx]
      sed -e 's/^\(contributors=\).*/\1/g' \
          -e "s/contributors=/contributors=\"$newcontributors\"/" \
          -i "$i"
    fi
  done
}

commit() {
  [ ! -f "$1"/Pkgfile ] && return
  release=1
  . "$1"/Pkgfile
  if [ -z "$version" ]; then
     printf "ERROR: version is not set\n"
     return 1
  fi
  if [ -z "$name" ]; then
     name="$(basename "$1")"
     printf "WARNING: name was not set\n"
  fi
  git add "$1"
  COMMENT="$name $version-$release"
  [ ! -z "$2" ] && COMMENT+="
$2"
  git commit -m "$COMMENT"
}

match_Pkgfile() {
        unset makedepends run
        for PKGFILE in $(find . -name Pkgfile | sort ); do
                DIR="$(dirname "$PKGFILE")/"
                (cd "$DIR" && source Pkgfile && \
                for i in ${makedepends[@]} ${run[@]}; do [ "$1" == "$i" ] && \
                printf "($(basename $(dirname "$DIR"))) $name $version\n";done)
        done
}
match_Anything() {
        find . -name Pkgfile -exec grep -l "$1" {} +
}

commit_it_all() {
  for i in $(git diff-files --name-only --diff-filter=M | sed -e 's#/Pkgfile##'); do
    commit $i;
  done
}
